
// go generate
// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by robots at
// 2017-04-20 21:11:00.824022672 +0200 CEST
//code for table t_master

package generrester



import (
	"restfest/db"
	"fmt"
	"time"

			
)

type dummyT_master time.Time

type T_masterParams struct {
    Length int `schema:"length"`
    Offset int `schema:"offset"`
}


type T_master struct {
    Id int32  `json:"id"`
    Lulu *string  `json:"lulu"`
    Lulu1 *string  `json:"lulu1"`
}

type ArT_master []T_master

			

func ScannerT_masterI(struT *T_master)  db.InterPgx  {

	return []interface{}{
				&struT.Id,
				&struT.Lulu,
				&struT.Lulu1,
			}

}


func SQLT_master(flag db.SQLOper)string{
  x :=   "id,lulu,lulu1"

  switch flag{
			
    case db.GenSelectID,  db.GenSelectAll:
    return fmt.Sprintf(db.SQLPattern[flag],
    x,
	     "t_master"	,
      "id" ,
    )

		case db.GenSelectAll1:
		return fmt.Sprintf(db.SQLPattern[flag],
		x,
   "t_master"	,
  		)

		case db.GenInsert:
		return  fmt.Sprintf( db.SQLPattern[flag],
			"t_master"	,
			 "lulu,lulu1"  ,
			 "$1,$2" ,
				x)

				case db.GenDelete:
				return  fmt.Sprintf(db.SQLPattern[flag]  ,
					"t_master"	,
						"id",
						x)
				case db.GenUpdate:
				return  fmt.Sprintf(db.SQLPattern[flag]  ,
					"t_master"	,
						"lulu=$1,lulu1=$2"  ,
						"id=$3",
					x)

			
  }

	return ""

}


func EmptyT_master() interface{}{
    return new(T_master)
}


func EmptyParamT_master() interface{}{

 rt := new(T_masterParams)

	
		rt.Length=100
	

    return rt
}

func ScannerT_master()(  db.InterPgx , interface{}){
	struT := new(T_master)

return  ScannerT_masterI(struT), struT

}


func ROWInsertT_master(inter interface{}) db.InterPgx {
					
  rt := inter.( *T_master )
	
  return []interface{}{
				
	&rt.Lulu,
	&rt.Lulu1,

  }

}


func ROWQueryT_master(inter interface{}) db.InterPgx {
  rt := inter.( *T_masterParams )

  return []interface{}{
		&rt.Length,
		&rt.Offset,
}

}
