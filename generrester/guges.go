
// go generate
// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by robots at
// 2017-04-20 21:11:00.548154475 +0200 CEST
//code for table guges

package generrester



import (
	"restfest/db"
	"fmt"
	"time"

			
)

type dummyGuges time.Time

type GugesParams struct {
    Length int `schema:"length"`
    Offset int `schema:"offset"`
}


type Guges struct {
    Id int32  `json:"id"`
    A Weburl  `json:"a"`
}

type ArGuges []Guges

			

func ScannerGugesI(struT *Guges)  db.InterPgx  {

	return []interface{}{
				&struT.Id,
				&struT.A,
			}

}


func SQLGuges(flag db.SQLOper)string{
  x :=   "id,a"

  switch flag{
			
    case db.GenSelectID,  db.GenSelectAll:
    return fmt.Sprintf(db.SQLPattern[flag],
    x,
	     "guges"	,
      "id" ,
    )

		case db.GenSelectAll1:
		return fmt.Sprintf(db.SQLPattern[flag],
		x,
   "guges"	,
  		)

		case db.GenInsert:
		return  fmt.Sprintf( db.SQLPattern[flag],
			"guges"	,
			 "a"  ,
			 "$1" ,
				x)

				case db.GenDelete:
				return  fmt.Sprintf(db.SQLPattern[flag]  ,
					"guges"	,
						"id",
						x)
				case db.GenUpdate:
				return  fmt.Sprintf(db.SQLPattern[flag]  ,
					"guges"	,
						"a=$1"  ,
						"id=$2",
					x)

			
  }

	return ""

}


func EmptyGuges() interface{}{
    return new(Guges)
}


func EmptyParamGuges() interface{}{

 rt := new(GugesParams)

	
		rt.Length=100
	

    return rt
}

func ScannerGuges()(  db.InterPgx , interface{}){
	struT := new(Guges)

return  ScannerGugesI(struT), struT

}


func ROWInsertGuges(inter interface{}) db.InterPgx {
					
  rt := inter.( *Guges )
	
  return []interface{}{
				
	&rt.A,

  }

}


func ROWQueryGuges(inter interface{}) db.InterPgx {
  rt := inter.( *GugesParams )

  return []interface{}{
		&rt.Length,
		&rt.Offset,
}

}
